apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: connection-hub-operator
    control-plane: controller-manager
  name: connection-hub-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: brokers.submariner.io
spec:
  group: submariner.io
  names:
    kind: Broker
    listKind: BrokerList
    plural: brokers
    singular: broker
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Broker is the Schema for the brokers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BrokerSpec defines the desired state of Broker.
              properties:
                components:
                  items:
                    type: string
                  type: array
                defaultCustomDomains:
                  items:
                    type: string
                  type: array
                defaultGlobalnetClusterSize:
                  type: integer
                globalnetCIDRRange:
                  type: string
                globalnetEnabled:
                  type: boolean
              type: object
            status:
              description: BrokerStatus defines the observed state of Broker
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: servicediscoveries.submariner.io
spec:
  group: submariner.io
  names:
    kind: ServiceDiscovery
    listKind: ServiceDiscoveryList
    plural: servicediscoveries
    singular: servicediscovery
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceDiscovery is the Schema for the servicediscoveries API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceDiscoverySpec defines the desired state of ServiceDiscovery
              properties:
                brokerK8sApiServer:
                  type: string
                brokerK8sApiServerToken:
                  type: string
                brokerK8sCA:
                  type: string
                brokerK8sInsecure:
                  type: boolean
                brokerK8sRemoteNamespace:
                  type: string
                brokerK8sSecret:
                  type: string
                clusterID:
                  type: string
                coreDNSCustomConfig:
                  properties:
                    configMapName:
                      type: string
                    namespace:
                      type: string
                  type: object
                customDomains:
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                debug:
                  type: boolean
                globalnetEnabled:
                  type: boolean
                imageOverrides:
                  additionalProperties:
                    type: string
                  type: object
                namespace:
                  type: string
                repository:
                  type: string
                version:
                  type: string
              required:
                - brokerK8sApiServer
                - brokerK8sRemoteNamespace
                - clusterID
                - debug
                - namespace
              type: object
            status:
              description: ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
              properties:
                deploymentInfo:
                  properties:
                    cloudProvider:
                      type: string
                    kubernetesType:
                      type: string
                    kubernetesTypeVersion:
                      type: string
                    kubernetesVersion:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: submarinerbrokers.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: SubmarinerBroker
    listKind: SubmarinerBrokerList
    plural: submarinerbrokers
    singular: submarinerbroker
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SubmarinerBroker is the Schema for the submarinerbrokers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerBrokerSpec defines the desired state of SubmarinerBroker
              properties:
                apiServerURL:
                  type: string
                helm:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    repository:
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                      required:
                        - name
                        - url
                      type: object
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - repository
                    - version
                  type: object
              required:
                - apiServerURL
                - helm
              type: object
            status:
              description: SubmarinerBrokerStatus defines the observed state of SubmarinerBroker
              properties:
                brokerCredentials:
                  properties:
                    ca:
                      type: string
                    token:
                      type: string
                  type: object
                chartResourceStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                chartStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                namespaceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                nodeInfo:
                  properties:
                    name:
                      type: string
                    selectors:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: submarineroperators.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: SubmarinerOperator
    listKind: SubmarinerOperatorList
    plural: submarineroperators
    singular: submarineroperator
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SubmarinerOperator is the Schema for the submarineroperators API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerOperatorSpec defines the desired state of SubmarinerOperator
              properties:
                apiServerURL:
                  type: string
                broker:
                  properties:
                    ca:
                      type: string
                    token:
                      type: string
                  type: object
                clusterCIDR:
                  type: string
                clusterID:
                  type: string
                helm:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    repository:
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                      required:
                        - name
                        - url
                      type: object
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - repository
                    - version
                  type: object
                presharedKey:
                  type: string
                serviceCIDR:
                  type: string
              required:
                - apiServerURL
                - broker
                - clusterCIDR
                - clusterID
                - helm
                - presharedKey
                - serviceCIDR
              type: object
            status:
              description: SubmarinerOperatorStatus defines the observed state of SubmarinerOperator
              properties:
                chartResourceStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                chartStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                namespaceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                nodeInfo:
                  properties:
                    name:
                      type: string
                    selectors:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: submariners.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: Submariner
    listKind: SubmarinerList
    plural: submariners
    singular: submariner
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Submariner is the Schema for the submariners API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerSpec defines the desired state of Submariner
              properties:
                apiServerURL:
                  type: string
                broker:
                  properties:
                    ca:
                      type: string
                    token:
                      type: string
                  type: object
                brokerHelmChart:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    repository:
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                      required:
                        - name
                        - url
                      type: object
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - repository
                    - version
                  type: object
                clusterCIDR:
                  type: string
                instanceType:
                  enum:
                    - CloudInstance
                    - PhysicalInstance
                  type: string
                operatorHelmChart:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    repository:
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                      required:
                        - name
                        - url
                      type: object
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - repository
                    - version
                  type: object
                presharedKey:
                  type: string
                serviceCIDR:
                  default: 10.32.0.0/16
                  type: string
              required:
                - apiServerURL
                - brokerHelmChart
                - clusterCIDR
                - operatorHelmChart
              type: object
            status:
              description: SubmarinerStatus defines the observed state of Submariner
              properties:
                brokerStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                    status:
                      description: SubmarinerBrokerStatus defines the observed state of SubmarinerBroker
                      properties:
                        brokerCredentials:
                          properties:
                            ca:
                              type: string
                            token:
                              type: string
                          type: object
                        chartResourceStatus:
                          properties:
                            deployed:
                              type: boolean
                          type: object
                        chartStatus:
                          properties:
                            deployed:
                              type: boolean
                          type: object
                        namespaceStatus:
                          properties:
                            created:
                              type: boolean
                          type: object
                        nodeInfo:
                          properties:
                            name:
                              type: string
                            selectors:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        phase:
                          type: string
                      type: object
                  type: object
                customResourceStatus:
                  properties:
                    created:
                      type: boolean
                    ownedResourceStatus:
                      properties:
                        deployed:
                          type: boolean
                      type: object
                  type: object
                nodeInfo:
                  properties:
                    name:
                      type: string
                    selectors:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                operatorStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: submariners.submariner.io
spec:
  group: submariner.io
  names:
    kind: Submariner
    listKind: SubmarinerList
    plural: submariners
    singular: submariner
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Submariner is the Schema for the submariners API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerSpec defines the desired state of Submariner
              properties:
                broker:
                  type: string
                brokerK8sApiServer:
                  type: string
                brokerK8sApiServerToken:
                  type: string
                brokerK8sCA:
                  type: string
                brokerK8sInsecure:
                  type: boolean
                brokerK8sRemoteNamespace:
                  type: string
                brokerK8sSecret:
                  type: string
                cableDriver:
                  type: string
                ceIPSecDebug:
                  type: boolean
                ceIPSecForceUDPEncaps:
                  type: boolean
                ceIPSecIKEPort:
                  type: integer
                ceIPSecNATTPort:
                  type: integer
                ceIPSecPSK:
                  type: string
                ceIPSecPSKSecret:
                  type: string
                ceIPSecPreferredServer:
                  type: boolean
                ceNatDiscovery:
                  type: integer
                clusterCIDR:
                  type: string
                clusterID:
                  type: string
                colorCodes:
                  type: string
                connectionHealthCheck:
                  properties:
                    enabled:
                      type: boolean
                    intervalSeconds:
                      description: The interval at which health check pings are sent.
                      format: int64
                      type: integer
                    maxPacketLossCount:
                      description: The maximum number of packets lost at which the health checker will mark the connection as down.
                      format: int64
                      type: integer
                  type: object
                coreDNSCustomConfig:
                  properties:
                    configMapName:
                      type: string
                    namespace:
                      type: string
                  type: object
                customDomains:
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                debug:
                  type: boolean
                globalCIDR:
                  type: string
                imageOverrides:
                  additionalProperties:
                    type: string
                  type: object
                loadBalancerEnabled:
                  type: boolean
                namespace:
                  type: string
                natEnabled:
                  type: boolean
                repository:
                  type: string
                serviceCIDR:
                  type: string
                serviceDiscoveryEnabled:
                  type: boolean
                version:
                  type: string
              required:
                - broker
                - brokerK8sApiServer
                - brokerK8sRemoteNamespace
                - ceIPSecDebug
                - clusterCIDR
                - clusterID
                - debug
                - namespace
                - natEnabled
                - serviceCIDR
              type: object
            status:
              description: SubmarinerStatus defines the observed state of Submariner
              properties:
                clusterCIDR:
                  type: string
                clusterID:
                  type: string
                colorCodes:
                  type: string
                deploymentInfo:
                  properties:
                    cloudProvider:
                      type: string
                    kubernetesType:
                      type: string
                    kubernetesTypeVersion:
                      type: string
                    kubernetesVersion:
                      type: string
                  type: object
                gatewayDaemonSetStatus:
                  properties:
                    lastResourceVersion:
                      type: string
                    mismatchedContainerImages:
                      type: boolean
                    nonReadyContainerStates:
                      items:
                        description: ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
                        properties:
                          running:
                            description: Details about a running container
                            properties:
                              startedAt:
                                description: Time at which the container was last (re-)started
                                format: date-time
                                type: string
                            type: object
                          terminated:
                            description: Details about a terminated container
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'
                                type: string
                              exitCode:
                                description: Exit status from the last termination of the container
                                format: int32
                                type: integer
                              finishedAt:
                                description: Time at which the container last terminated
                                format: date-time
                                type: string
                              message:
                                description: Message regarding the last termination of the container
                                type: string
                              reason:
                                description: (brief) reason from the last termination of the container
                                type: string
                              signal:
                                description: Signal from the last termination of the container
                                format: int32
                                type: integer
                              startedAt:
                                description: Time at which previous execution of the container started
                                format: date-time
                                type: string
                            required:
                              - exitCode
                            type: object
                          waiting:
                            description: Details about a waiting container
                            properties:
                              message:
                                description: Message regarding why the container is not yet running.
                                type: string
                              reason:
                                description: (brief) reason the container is not yet running.
                                type: string
                            type: object
                        type: object
                      type: array
                    status:
                      description: DaemonSetStatus represents the current status of a daemon set.
                      properties:
                        collisionCount:
                          description: Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
                          format: int32
                          type: integer
                        conditions:
                          description: Represents the latest available observations of a DaemonSet's current state.
                          items:
                            description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type of DaemonSet condition.
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        currentNumberScheduled:
                          description: 'The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        desiredNumberScheduled:
                          description: 'The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberAvailable:
                          description: The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        numberMisscheduled:
                          description: 'The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberReady:
                          description: numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.
                          format: int32
                          type: integer
                        numberUnavailable:
                          description: The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        observedGeneration:
                          description: The most recent generation observed by the daemon set controller.
                          format: int64
                          type: integer
                        updatedNumberScheduled:
                          description: The total number of nodes that are running updated daemon pod
                          format: int32
                          type: integer
                      required:
                        - currentNumberScheduled
                        - desiredNumberScheduled
                        - numberMisscheduled
                        - numberReady
                      type: object
                  required:
                    - mismatchedContainerImages
                  type: object
                gateways:
                  items:
                    properties:
                      connections:
                        items:
                          properties:
                            endpoint:
                              properties:
                                backend:
                                  type: string
                                backend_config:
                                  additionalProperties:
                                    type: string
                                  type: object
                                cable_name:
                                  type: string
                                cluster_id:
                                  maxLength: 63
                                  minLength: 1
                                  type: string
                                healthCheckIP:
                                  type: string
                                hostname:
                                  type: string
                                nat_enabled:
                                  type: boolean
                                private_ip:
                                  type: string
                                public_ip:
                                  type: string
                                subnets:
                                  items:
                                    type: string
                                  type: array
                              required:
                                - backend
                                - cable_name
                                - cluster_id
                                - hostname
                                - nat_enabled
                                - private_ip
                                - public_ip
                                - subnets
                              type: object
                            latencyRTT:
                              description: LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
                              properties:
                                average:
                                  type: string
                                last:
                                  type: string
                                max:
                                  type: string
                                min:
                                  type: string
                                stdDev:
                                  type: string
                              type: object
                            status:
                              type: string
                            statusMessage:
                              type: string
                            usingIP:
                              type: string
                            usingNAT:
                              type: boolean
                          required:
                            - endpoint
                            - status
                            - statusMessage
                          type: object
                        type: array
                      haStatus:
                        type: string
                      localEndpoint:
                        properties:
                          backend:
                            type: string
                          backend_config:
                            additionalProperties:
                              type: string
                            type: object
                          cable_name:
                            type: string
                          cluster_id:
                            maxLength: 63
                            minLength: 1
                            type: string
                          healthCheckIP:
                            type: string
                          hostname:
                            type: string
                          nat_enabled:
                            type: boolean
                          private_ip:
                            type: string
                          public_ip:
                            type: string
                          subnets:
                            items:
                              type: string
                            type: array
                        required:
                          - backend
                          - cable_name
                          - cluster_id
                          - hostname
                          - nat_enabled
                          - private_ip
                          - public_ip
                          - subnets
                        type: object
                      statusFailure:
                        type: string
                      version:
                        type: string
                    required:
                      - connections
                      - haStatus
                      - localEndpoint
                      - statusFailure
                      - version
                    type: object
                  type: array
                globalCIDR:
                  type: string
                globalnetDaemonSetStatus:
                  properties:
                    lastResourceVersion:
                      type: string
                    mismatchedContainerImages:
                      type: boolean
                    nonReadyContainerStates:
                      items:
                        description: ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
                        properties:
                          running:
                            description: Details about a running container
                            properties:
                              startedAt:
                                description: Time at which the container was last (re-)started
                                format: date-time
                                type: string
                            type: object
                          terminated:
                            description: Details about a terminated container
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'
                                type: string
                              exitCode:
                                description: Exit status from the last termination of the container
                                format: int32
                                type: integer
                              finishedAt:
                                description: Time at which the container last terminated
                                format: date-time
                                type: string
                              message:
                                description: Message regarding the last termination of the container
                                type: string
                              reason:
                                description: (brief) reason from the last termination of the container
                                type: string
                              signal:
                                description: Signal from the last termination of the container
                                format: int32
                                type: integer
                              startedAt:
                                description: Time at which previous execution of the container started
                                format: date-time
                                type: string
                            required:
                              - exitCode
                            type: object
                          waiting:
                            description: Details about a waiting container
                            properties:
                              message:
                                description: Message regarding why the container is not yet running.
                                type: string
                              reason:
                                description: (brief) reason the container is not yet running.
                                type: string
                            type: object
                        type: object
                      type: array
                    status:
                      description: DaemonSetStatus represents the current status of a daemon set.
                      properties:
                        collisionCount:
                          description: Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
                          format: int32
                          type: integer
                        conditions:
                          description: Represents the latest available observations of a DaemonSet's current state.
                          items:
                            description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type of DaemonSet condition.
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        currentNumberScheduled:
                          description: 'The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        desiredNumberScheduled:
                          description: 'The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberAvailable:
                          description: The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        numberMisscheduled:
                          description: 'The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberReady:
                          description: numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.
                          format: int32
                          type: integer
                        numberUnavailable:
                          description: The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        observedGeneration:
                          description: The most recent generation observed by the daemon set controller.
                          format: int64
                          type: integer
                        updatedNumberScheduled:
                          description: The total number of nodes that are running updated daemon pod
                          format: int32
                          type: integer
                      required:
                        - currentNumberScheduled
                        - desiredNumberScheduled
                        - numberMisscheduled
                        - numberReady
                      type: object
                  required:
                    - mismatchedContainerImages
                  type: object
                loadBalancerStatus:
                  properties:
                    status:
                      description: LoadBalancerStatus represents the status of a load-balancer.
                      properties:
                        ingress:
                          description: Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
                          items:
                            description: 'LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service ports If used, every port defined in the service should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use CamelCase names - cloud provider specific error values must have names that comply with the format foo.example.com/CamelCase. --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                    - port
                                    - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                      type: object
                  type: object
                natEnabled:
                  type: boolean
                networkPlugin:
                  type: string
                routeAgentDaemonSetStatus:
                  properties:
                    lastResourceVersion:
                      type: string
                    mismatchedContainerImages:
                      type: boolean
                    nonReadyContainerStates:
                      items:
                        description: ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
                        properties:
                          running:
                            description: Details about a running container
                            properties:
                              startedAt:
                                description: Time at which the container was last (re-)started
                                format: date-time
                                type: string
                            type: object
                          terminated:
                            description: Details about a terminated container
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'
                                type: string
                              exitCode:
                                description: Exit status from the last termination of the container
                                format: int32
                                type: integer
                              finishedAt:
                                description: Time at which the container last terminated
                                format: date-time
                                type: string
                              message:
                                description: Message regarding the last termination of the container
                                type: string
                              reason:
                                description: (brief) reason from the last termination of the container
                                type: string
                              signal:
                                description: Signal from the last termination of the container
                                format: int32
                                type: integer
                              startedAt:
                                description: Time at which previous execution of the container started
                                format: date-time
                                type: string
                            required:
                              - exitCode
                            type: object
                          waiting:
                            description: Details about a waiting container
                            properties:
                              message:
                                description: Message regarding why the container is not yet running.
                                type: string
                              reason:
                                description: (brief) reason the container is not yet running.
                                type: string
                            type: object
                        type: object
                      type: array
                    status:
                      description: DaemonSetStatus represents the current status of a daemon set.
                      properties:
                        collisionCount:
                          description: Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
                          format: int32
                          type: integer
                        conditions:
                          description: Represents the latest available observations of a DaemonSet's current state.
                          items:
                            description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type of DaemonSet condition.
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        currentNumberScheduled:
                          description: 'The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        desiredNumberScheduled:
                          description: 'The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberAvailable:
                          description: The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        numberMisscheduled:
                          description: 'The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberReady:
                          description: numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.
                          format: int32
                          type: integer
                        numberUnavailable:
                          description: The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        observedGeneration:
                          description: The most recent generation observed by the daemon set controller.
                          format: int64
                          type: integer
                        updatedNumberScheduled:
                          description: The total number of nodes that are running updated daemon pod
                          format: int32
                          type: integer
                      required:
                        - currentNumberScheduled
                        - desiredNumberScheduled
                        - numberMisscheduled
                        - numberReady
                      type: object
                  required:
                    - mismatchedContainerImages
                  type: object
                serviceCIDR:
                  type: string
              required:
                - clusterID
                - natEnabled
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-controller-manager
  namespace: connection-hub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-leader-election-role
  namespace: connection-hub-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: connection-hub-operator-manager-role
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments/finalizers
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - config.openshift.io
    resources:
      - networks
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarinerbrokers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarinerbrokers/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarinerbrokers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarineroperators
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarineroperators/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarineroperators/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submariners
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submariners/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submariners/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - '*'
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - services/finalizers
    verbs:
      - '*'
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices/restricted
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - '*'
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - serviceexports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - '*'
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - network.openshift.io
    resources:
      - service/externalips
    verbs:
      - '*'
  - apiGroups:
      - operator.openshift.io
    resources:
      - dnses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - submariner.io
    resources:
      - clusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - gateways
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - globalingressips
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - servicediscoveries
    verbs:
      - '*'
  - apiGroups:
      - submariner.io
    resources:
      - submariners
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-leader-election-rolebinding
  namespace: connection-hub-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: connection-hub-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: connection-hub-operator-controller-manager
    namespace: connection-hub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: connection-hub-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: connection-hub-operator-controller-manager
    namespace: connection-hub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: connection-hub-operator-proxy-role
subjects:
  - kind: ServiceAccount
    name: connection-hub-operator-controller-manager
    namespace: connection-hub-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: connection-hub-operator
    control-plane: controller-manager
  name: connection-hub-operator-controller-manager-metrics-service
  namespace: connection-hub-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-webhook-service
  namespace: connection-hub-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: connection-hub-operator
    control-plane: controller-manager
  name: connection-hub-operator-controller-manager
  namespace: connection-hub-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: robolaunchio/connection-hub-controller-manager-dev:v0.2.26
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: connection-hub-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
      nodeSelector:
        robolaunch.io/organization: robot-operator
        robolaunch.io/department: robotics
        robolaunch.io/super-cluster: aws-helsinki-1
        robolaunch.io/cloud-instance: instance1
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-serving-cert
  namespace: connection-hub-system
spec:
  dnsNames:
    - connection-hub-operator-webhook-service.connection-hub-system.svc
    - connection-hub-operator-webhook-service.connection-hub-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: connection-hub-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kuberentes.io/name: issuer
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-selfsigned-issuer
  namespace: connection-hub-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-submariner
    failurePolicy: Fail
    name: msubmariner.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submariners
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-submarinerbroker
    failurePolicy: Fail
    name: msubmarinerbroker.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarinerbrokers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-submarineroperator
    failurePolicy: Fail
    name: msubmarineroperator.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarineroperators
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-submariner
    failurePolicy: Fail
    name: vsubmariner.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submariners
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-submarinerbroker
    failurePolicy: Fail
    name: vsubmarinerbroker.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarinerbrokers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-submarineroperator
    failurePolicy: Fail
    name: vsubmarineroperator.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarineroperators
    sideEffects: None
