apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kubefedconfigs.core.kubefed.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "connection-hub-operator.labels" . | nindent 4 }}
spec:
  group: core.kubefed.io
  names:
    kind: KubeFedConfig
    listKind: KubeFedConfigList
    plural: kubefedconfigs
    singular: kubefedconfig
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubeFedConfigSpec defines the desired state of KubeFedConfig
            properties:
              clusterHealthCheck:
                properties:
                  failureThreshold:
                    description: Minimum consecutive failures for the cluster health
                      to be considered failed after having succeeded.
                    format: int64
                    type: integer
                  period:
                    description: How often to monitor the cluster health.
                    type: string
                  successThreshold:
                    description: Minimum consecutive successes for the cluster health
                      to be considered successful after having failed.
                    format: int64
                    type: integer
                  timeout:
                    description: Duration after which the cluster health check times
                      out.
                    type: string
                type: object
              controllerDuration:
                properties:
                  availableDelay:
                    description: Time to wait before reconciling on a healthy cluster.
                    type: string
                  cacheSyncTimeout:
                    description: Time to wait for all caches to sync before exit.
                    type: string
                  unavailableDelay:
                    description: Time to wait before giving up on an unhealthy cluster.
                    type: string
                type: object
              featureGates:
                items:
                  properties:
                    configuration:
                      type: string
                    name:
                      type: string
                  required:
                  - configuration
                  - name
                  type: object
                type: array
              leaderElect:
                properties:
                  leaseDuration:
                    description: The duration that non-leader candidates will wait after
                      observing a leadership renewal until attempting to acquire leadership
                      of a led but unrenewed leader slot. This is effectively the maximum
                      duration that a leader can be stopped before it is replaced by
                      another candidate. This is only applicable if leader election
                      is enabled.
                    type: string
                  renewDeadline:
                    description: The interval between attempts by the acting master
                      to renew a leadership slot before it stops leading. This must
                      be less than or equal to the lease duration. This is only applicable
                      if leader election is enabled.
                    type: string
                  resourceLock:
                    description: The type of resource object that is used for locking
                      during leader election. Supported options are `configmaps` (default)
                      and `endpoints`.
                    type: string
                  retryPeriod:
                    description: The duration the clients should wait between attempting
                      acquisition and renewal of a leadership. This is only applicable
                      if leader election is enabled.
                    type: string
                type: object
              scope:
                description: The scope of the KubeFed control plane should be either
                  `Namespaced` or `Cluster`. `Namespaced` indicates that the KubeFed
                  namespace will be the only target of the control plane.
                type: string
              statusController:
                properties:
                  maxConcurrentReconciles:
                    description: The maximum number of concurrent Reconciles of status
                      controller which can be run. Defaults to 1.
                    format: int64
                    type: integer
                type: object
              syncController:
                properties:
                  adoptResources:
                    description: Whether to adopt pre-existing resources in member clusters.
                      Defaults to "Enabled".
                    type: string
                  maxConcurrentReconciles:
                    description: The maximum number of concurrent Reconciles of sync
                      controller which can be run. Defaults to 1.
                    format: int64
                    type: integer
                type: object
            required:
            - scope
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []