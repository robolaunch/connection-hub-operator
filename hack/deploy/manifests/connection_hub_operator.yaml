apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: connection-hub-operator
    control-plane: controller-manager
  name: connection-hub-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: brokers.submariner.io
spec:
  group: submariner.io
  names:
    kind: Broker
    listKind: BrokerList
    plural: brokers
    singular: broker
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Broker is the Schema for the brokers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BrokerSpec defines the desired state of Broker.
              properties:
                components:
                  items:
                    type: string
                  type: array
                defaultCustomDomains:
                  items:
                    type: string
                  type: array
                defaultGlobalnetClusterSize:
                  type: integer
                globalnetCIDRRange:
                  type: string
                globalnetEnabled:
                  type: boolean
              type: object
            status:
              description: BrokerStatus defines the observed state of Broker
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: cloudinstances.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: CloudInstance
    listKind: CloudInstanceList
    plural: cloudinstances
    singular: cloudinstance
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.gatewayConnection.gatewayResource
          name: Gateway
          type: string
        - jsonPath: .status.gatewayConnection.hostname
          name: Hostname
          type: string
        - jsonPath: .status.gatewayConnection.clusterID
          name: Cluster ID
          type: string
        - jsonPath: .status.phase
          name: Multicast
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: CloudInstance is the Schema for the cloudinstances API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CloudInstanceSpec defines the desired state of CloudInstance
              type: object
            status:
              description: CloudInstanceStatus defines the observed state of CloudInstance
              properties:
                connectionResources:
                  properties:
                    clusterStatus:
                      properties:
                        exists:
                          type: boolean
                        name:
                          type: string
                      type: object
                    endpointStatus:
                      properties:
                        exists:
                          type: boolean
                        name:
                          type: string
                      type: object
                  type: object
                deployerStatus:
                  properties:
                    exists:
                      type: boolean
                    name:
                      type: string
                    phase:
                      type: string
                  type: object
                gatewayConnection:
                  properties:
                    clusterID:
                      type: string
                    connectionStatus:
                      type: string
                    gatewayResource:
                      type: string
                    hostname:
                      type: string
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clusterglobalegressips.submariner.io
spec:
  group: submariner.io
  names:
    kind: ClusterGlobalEgressIP
    listKind: ClusterGlobalEgressIPList
    plural: clusterglobalegressips
    shortNames:
      - cgeip
    singular: clusterglobalegressip
  scope: Cluster
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ClusterGlobalEgressIP defines a policy for allocating GlobalIPs at the cluster level to be used when no GlobalEgressIP applies.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the specification of desired behavior.
              properties:
                numGlobalIPs:
                  description: The requested number of contiguous GlobalIPs to allocate from the Globalnet CIDR assigned to the cluster. If not specified, defaults to 1.
                  maximum: 20
                  minimum: 0
                  type: integer
              type: object
            status:
              description: The most recently observed status. Read-only.
              properties:
                allocatedIPs:
                  description: The list of allocated GlobalIPs.
                  items:
                    type: string
                  type: array
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clusters.submariner.io
spec:
  group: submariner.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                cluster_cidr:
                  items:
                    type: string
                  type: array
                cluster_id:
                  maxLength: 63
                  minLength: 1
                  type: string
                color_codes:
                  items:
                    type: string
                  type: array
                global_cidr:
                  items:
                    type: string
                  type: array
                service_cidr:
                  items:
                    type: string
                  type: array
              required:
                - cluster_cidr
                - cluster_id
                - global_cidr
                - service_cidr
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: connectionhubs.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: ConnectionHub
    listKind: ConnectionHubList
    plural: connectionhubs
    singular: connectionhub
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ConnectionHub is the Schema for the connectionhubs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConnectionHubSpec defines the desired state of ConnectionHub
              properties:
                federationSpec:
                  description: FederationOperatorSpec defines the desired state of FederationOperator
                  properties:
                    controllerImage:
                      properties:
                        image:
                          type: string
                        repository:
                          type: string
                        tag:
                          type: string
                      required:
                        - image
                        - repository
                        - tag
                      type: object
                    federatedTypes:
                      items:
                        type: string
                      type: array
                    helmChart:
                      properties:
                        chartName:
                          type: string
                        releaseName:
                          type: string
                        version:
                          type: string
                      required:
                        - chartName
                        - releaseName
                        - version
                      type: object
                    helmRepository:
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                      required:
                        - name
                        - url
                      type: object
                    postInstallJobImage:
                      properties:
                        image:
                          type: string
                        repository:
                          type: string
                        tag:
                          type: string
                      required:
                        - image
                        - repository
                        - tag
                      type: object
                    webhookImage:
                      properties:
                        image:
                          type: string
                        repository:
                          type: string
                        tag:
                          type: string
                      required:
                        - image
                        - repository
                        - tag
                      type: object
                  required:
                    - controllerImage
                    - helmChart
                    - helmRepository
                    - postInstallJobImage
                    - webhookImage
                  type: object
                instanceType:
                  enum:
                    - CloudInstance
                    - PhysicalInstance
                  type: string
                submarinerSpec:
                  description: SubmarinerSpec defines the desired state of Submariner
                  properties:
                    apiServerURL:
                      type: string
                    broker:
                      properties:
                        ca:
                          type: string
                        token:
                          type: string
                      type: object
                    brokerHelmChart:
                      properties:
                        chartName:
                          type: string
                        releaseName:
                          type: string
                        version:
                          type: string
                      required:
                        - chartName
                        - releaseName
                        - version
                      type: object
                    clusterCIDR:
                      type: string
                    gatewayImage:
                      properties:
                        image:
                          type: string
                        repository:
                          type: string
                        tag:
                          type: string
                      required:
                        - image
                        - repository
                        - tag
                      type: object
                    helmRepository:
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                      required:
                        - name
                        - url
                      type: object
                    instanceType:
                      enum:
                        - CloudInstance
                        - PhysicalInstance
                      type: string
                    operatorHelmChart:
                      properties:
                        chartName:
                          type: string
                        releaseName:
                          type: string
                        version:
                          type: string
                      required:
                        - chartName
                        - releaseName
                        - version
                      type: object
                    operatorImage:
                      properties:
                        image:
                          type: string
                        repository:
                          type: string
                        tag:
                          type: string
                      required:
                        - image
                        - repository
                        - tag
                      type: object
                    presharedKey:
                      type: string
                    serviceCIDR:
                      default: 10.32.0.0/16
                      type: string
                    submarinerImages:
                      properties:
                        image:
                          type: string
                        repository:
                          type: string
                        tag:
                          type: string
                      required:
                        - image
                        - repository
                        - tag
                      type: object
                  required:
                    - apiServerURL
                    - brokerHelmChart
                    - clusterCIDR
                    - gatewayImage
                    - helmRepository
                    - operatorHelmChart
                    - operatorImage
                    - submarinerImages
                  type: object
              required:
                - federationSpec
                - submarinerSpec
              type: object
            status:
              description: ConnectionHubStatus defines the observed state of ConnectionHub
              properties:
                cloudInstance:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                connectionInterfaces:
                  properties:
                    forCloudInstance:
                      additionalProperties:
                        description: FederationMemberSpec defines the desired state of FederationMember
                        properties:
                          credentials:
                            properties:
                              certificateAuthority:
                                type: string
                              clientCertificate:
                                type: string
                              clientKey:
                                type: string
                            required:
                              - certificateAuthority
                              - clientCertificate
                              - clientKey
                            type: object
                          isHost:
                            type: boolean
                          server:
                            type: string
                        required:
                          - credentials
                          - server
                        type: object
                      type: object
                    forPhysicalInstance:
                      description: ConnectionHubSpec defines the desired state of ConnectionHub
                      properties:
                        federationSpec:
                          description: FederationOperatorSpec defines the desired state of FederationOperator
                          properties:
                            controllerImage:
                              properties:
                                image:
                                  type: string
                                repository:
                                  type: string
                                tag:
                                  type: string
                              required:
                                - image
                                - repository
                                - tag
                              type: object
                            federatedTypes:
                              items:
                                type: string
                              type: array
                            helmChart:
                              properties:
                                chartName:
                                  type: string
                                releaseName:
                                  type: string
                                version:
                                  type: string
                              required:
                                - chartName
                                - releaseName
                                - version
                              type: object
                            helmRepository:
                              properties:
                                name:
                                  type: string
                                url:
                                  type: string
                              required:
                                - name
                                - url
                              type: object
                            postInstallJobImage:
                              properties:
                                image:
                                  type: string
                                repository:
                                  type: string
                                tag:
                                  type: string
                              required:
                                - image
                                - repository
                                - tag
                              type: object
                            webhookImage:
                              properties:
                                image:
                                  type: string
                                repository:
                                  type: string
                                tag:
                                  type: string
                              required:
                                - image
                                - repository
                                - tag
                              type: object
                          required:
                            - controllerImage
                            - helmChart
                            - helmRepository
                            - postInstallJobImage
                            - webhookImage
                          type: object
                        instanceType:
                          enum:
                            - CloudInstance
                            - PhysicalInstance
                          type: string
                        submarinerSpec:
                          description: SubmarinerSpec defines the desired state of Submariner
                          properties:
                            apiServerURL:
                              type: string
                            broker:
                              properties:
                                ca:
                                  type: string
                                token:
                                  type: string
                              type: object
                            brokerHelmChart:
                              properties:
                                chartName:
                                  type: string
                                releaseName:
                                  type: string
                                version:
                                  type: string
                              required:
                                - chartName
                                - releaseName
                                - version
                              type: object
                            clusterCIDR:
                              type: string
                            gatewayImage:
                              properties:
                                image:
                                  type: string
                                repository:
                                  type: string
                                tag:
                                  type: string
                              required:
                                - image
                                - repository
                                - tag
                              type: object
                            helmRepository:
                              properties:
                                name:
                                  type: string
                                url:
                                  type: string
                              required:
                                - name
                                - url
                              type: object
                            instanceType:
                              enum:
                                - CloudInstance
                                - PhysicalInstance
                              type: string
                            operatorHelmChart:
                              properties:
                                chartName:
                                  type: string
                                releaseName:
                                  type: string
                                version:
                                  type: string
                              required:
                                - chartName
                                - releaseName
                                - version
                              type: object
                            operatorImage:
                              properties:
                                image:
                                  type: string
                                repository:
                                  type: string
                                tag:
                                  type: string
                              required:
                                - image
                                - repository
                                - tag
                              type: object
                            presharedKey:
                              type: string
                            serviceCIDR:
                              default: 10.32.0.0/16
                              type: string
                            submarinerImages:
                              properties:
                                image:
                                  type: string
                                repository:
                                  type: string
                                tag:
                                  type: string
                              required:
                                - image
                                - repository
                                - tag
                              type: object
                          required:
                            - apiServerURL
                            - brokerHelmChart
                            - clusterCIDR
                            - gatewayImage
                            - helmRepository
                            - operatorHelmChart
                            - operatorImage
                            - submarinerImages
                          type: object
                      required:
                        - federationSpec
                        - submarinerSpec
                      type: object
                  type: object
                federation:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                federationHost:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                key:
                  type: string
                nodeInfo:
                  properties:
                    name:
                      type: string
                    selectors:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                phase:
                  type: string
                submariner:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: endpoints.submariner.io
spec:
  group: submariner.io
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                backend:
                  type: string
                backend_config:
                  additionalProperties:
                    type: string
                  type: object
                cable_name:
                  type: string
                cluster_id:
                  maxLength: 63
                  minLength: 1
                  type: string
                healthCheckIP:
                  type: string
                hostname:
                  type: string
                nat_enabled:
                  type: boolean
                private_ip:
                  type: string
                public_ip:
                  type: string
                subnets:
                  items:
                    type: string
                  type: array
              required:
                - backend
                - cable_name
                - cluster_id
                - hostname
                - nat_enabled
                - private_ip
                - public_ip
                - subnets
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: federatedtypeconfigs.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: FederatedTypeConfig
    listKind: FederatedTypeConfigList
    plural: federatedtypeconfigs
    shortNames:
      - ftc
    singular: federatedtypeconfig
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: "FederatedTypeConfig programs KubeFed to know about a single API type - the \"target type\" - that a user wants to federate. For each target type, there is a corresponding FederatedType that has the following fields: \n - The \"template\" field specifies the basic definition of a federated resource - The \"placement\" field specifies the placement information for the federated resource - The \"overrides\" field specifies how the target resource should vary across clusters."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FederatedTypeConfigSpec defines the desired state of FederatedTypeConfig.
              properties:
                federatedType:
                  description: Configuration for the federated type that defines (via template, placement and overrides fields) how the target type should appear in multiple cluster.
                  properties:
                    group:
                      description: Group of the resource.
                      type: string
                    kind:
                      description: Camel-cased singular name of the resource (e.g. ConfigMap)
                      type: string
                    pluralName:
                      description: Lower-cased plural name of the resource (e.g. configmaps).  If not provided, it will be computed by lower-casing the kind and suffixing an 's'.
                      type: string
                    scope:
                      description: Scope of the resource.
                      type: string
                    version:
                      description: Version of the resource.
                      type: string
                  required:
                    - kind
                    - pluralName
                    - scope
                    - version
                  type: object
                propagation:
                  description: Whether or not propagation to member clusters should be enabled.
                  type: string
                statusCollection:
                  description: Whether or not Status object should be populated.
                  type: string
                statusType:
                  description: Configuration for the status type that holds information about which type holds the status of the federated resource. If not provided, the group and version will default to those provided for the federated type api resource.
                  properties:
                    group:
                      description: Group of the resource.
                      type: string
                    kind:
                      description: Camel-cased singular name of the resource (e.g. ConfigMap)
                      type: string
                    pluralName:
                      description: Lower-cased plural name of the resource (e.g. configmaps).  If not provided, it will be computed by lower-casing the kind and suffixing an 's'.
                      type: string
                    scope:
                      description: Scope of the resource.
                      type: string
                    version:
                      description: Version of the resource.
                      type: string
                  required:
                    - kind
                    - pluralName
                    - scope
                    - version
                  type: object
                targetType:
                  description: The configuration of the target type. If not set, the pluralName and groupName fields will be set from the metadata.name of this resource. The kind field must be set.
                  properties:
                    group:
                      description: Group of the resource.
                      type: string
                    kind:
                      description: Camel-cased singular name of the resource (e.g. ConfigMap)
                      type: string
                    pluralName:
                      description: Lower-cased plural name of the resource (e.g. configmaps).  If not provided, it will be computed by lower-casing the kind and suffixing an 's'.
                      type: string
                    scope:
                      description: Scope of the resource.
                      type: string
                    version:
                      description: Version of the resource.
                      type: string
                  required:
                    - kind
                    - pluralName
                    - scope
                    - version
                  type: object
              required:
                - federatedType
                - propagation
                - targetType
              type: object
            status:
              description: FederatedTypeConfigStatus defines the observed state of FederatedTypeConfig
              properties:
                observedGeneration:
                  description: ObservedGeneration is the generation as observed by the controller consuming the FederatedTypeConfig.
                  format: int64
                  type: integer
                propagationController:
                  description: PropagationController tracks the status of the sync controller.
                  type: string
                statusController:
                  description: StatusController tracks the status of the status controller.
                  type: string
              required:
                - observedGeneration
                - propagationController
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: federationhosts.connection-hub.roboscale.io
spec:
  group: connection-hub.roboscale.io
  names:
    kind: FederationHost
    listKind: FederationHostList
    plural: federationhosts
    singular: federationhost
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: FederationHost is the Schema for the federationhosts API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              description: FederationHostStatus defines the observed state of FederationHost
              properties:
                memberStatuses:
                  additionalProperties:
                    description: FederationMemberStatus defines the observed state of FederationMember
                    properties:
                      host:
                        properties:
                          exists:
                            type: boolean
                          name:
                            type: string
                        type: object
                      joinAttempted:
                        type: boolean
                      kubefedClusterStatus:
                        properties:
                          conditionType:
                            type: string
                          created:
                            type: boolean
                          reason:
                            type: string
                        type: object
                      phase:
                        type: string
                    type: object
                  type: object
                phase:
                  type: string
                selfJoined:
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: federationmembers.connection-hub.roboscale.io
spec:
  group: connection-hub.roboscale.io
  names:
    kind: FederationMember
    listKind: FederationMemberList
    plural: federationmembers
    singular: federationmember
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: FederationMember is the Schema for the federationmembers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FederationMemberSpec defines the desired state of FederationMember
              properties:
                credentials:
                  properties:
                    certificateAuthority:
                      type: string
                    clientCertificate:
                      type: string
                    clientKey:
                      type: string
                  required:
                    - certificateAuthority
                    - clientCertificate
                    - clientKey
                  type: object
                isHost:
                  type: boolean
                server:
                  type: string
              required:
                - credentials
                - server
              type: object
            status:
              description: FederationMemberStatus defines the observed state of FederationMember
              properties:
                host:
                  properties:
                    exists:
                      type: boolean
                    name:
                      type: string
                  type: object
                joinAttempted:
                  type: boolean
                kubefedClusterStatus:
                  properties:
                    conditionType:
                      type: string
                    created:
                      type: boolean
                    reason:
                      type: string
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: federationoperators.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: FederationOperator
    listKind: FederationOperatorList
    plural: federationoperators
    singular: federationoperator
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: FederationOperator is the Schema for the federationoperators API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FederationOperatorSpec defines the desired state of FederationOperator
              properties:
                controllerImage:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
                federatedTypes:
                  items:
                    type: string
                  type: array
                helmChart:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - version
                  type: object
                helmRepository:
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                  required:
                    - name
                    - url
                  type: object
                postInstallJobImage:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
                webhookImage:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
              required:
                - controllerImage
                - helmChart
                - helmRepository
                - postInstallJobImage
                - webhookImage
              type: object
            status:
              description: FederationOperatorStatus defines the observed state of FederationOperator
              properties:
                chartResourceStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                chartStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                federationTypeStatuses:
                  additionalProperties:
                    type: boolean
                  type: object
                federationTypesEnabled:
                  type: boolean
                namespaceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                phase:
                  type: string
                typesInitiallyDisabled:
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: gateways.submariner.io
spec:
  group: submariner.io
  names:
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: High availability status of the Gateway
          jsonPath: .status.haStatus
          name: HA Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              properties:
                connections:
                  items:
                    properties:
                      endpoint:
                        properties:
                          backend:
                            type: string
                          backend_config:
                            additionalProperties:
                              type: string
                            type: object
                          cable_name:
                            type: string
                          cluster_id:
                            maxLength: 63
                            minLength: 1
                            type: string
                          healthCheckIP:
                            type: string
                          hostname:
                            type: string
                          nat_enabled:
                            type: boolean
                          private_ip:
                            type: string
                          public_ip:
                            type: string
                          subnets:
                            items:
                              type: string
                            type: array
                        required:
                          - backend
                          - cable_name
                          - cluster_id
                          - hostname
                          - nat_enabled
                          - private_ip
                          - public_ip
                          - subnets
                        type: object
                      latencyRTT:
                        description: LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
                        properties:
                          average:
                            type: string
                          last:
                            type: string
                          max:
                            type: string
                          min:
                            type: string
                          stdDev:
                            type: string
                        type: object
                      status:
                        type: string
                      statusMessage:
                        type: string
                      usingIP:
                        type: string
                      usingNAT:
                        type: boolean
                    required:
                      - endpoint
                      - status
                      - statusMessage
                    type: object
                  type: array
                haStatus:
                  type: string
                localEndpoint:
                  properties:
                    backend:
                      type: string
                    backend_config:
                      additionalProperties:
                        type: string
                      type: object
                    cable_name:
                      type: string
                    cluster_id:
                      maxLength: 63
                      minLength: 1
                      type: string
                    healthCheckIP:
                      type: string
                    hostname:
                      type: string
                    nat_enabled:
                      type: boolean
                    private_ip:
                      type: string
                    public_ip:
                      type: string
                    subnets:
                      items:
                        type: string
                      type: array
                  required:
                    - backend
                    - cable_name
                    - cluster_id
                    - hostname
                    - nat_enabled
                    - private_ip
                    - public_ip
                    - subnets
                  type: object
                statusFailure:
                  type: string
                version:
                  type: string
              required:
                - connections
                - haStatus
                - localEndpoint
                - statusFailure
                - version
              type: object
          required:
            - status
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: globalegressips.submariner.io
spec:
  group: submariner.io
  names:
    kind: GlobalEgressIP
    listKind: GlobalEgressIPList
    plural: globalegressips
    shortNames:
      - geip
    singular: globalegressip
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: GlobalEgressIP defines a policy for allocating GlobalIPs for selected pods in the namespace of the GlobalEgressIP object.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the specification of the desired behavior.
              properties:
                numberOfIPs:
                  description: The requested number of contiguous GlobalIPs to allocate from the Globalnet CIDR assigned to the cluster. If not specified, defaults to 1.
                  maximum: 20
                  minimum: 0
                  type: integer
                podSelector:
                  description: Selects specific pods in the namespace of this GlobalEgressIP to which this GlobalEgressIP applies. If not specified, all pods in the namespace are selected. If a pod matches multiple GlobalEgressIP objects, there is no guarantee from which GlobalEgressIP its GlobalIP will be assigned.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
              type: object
            status:
              description: The most recently observed status. Read-only.
              properties:
                allocatedIPs:
                  description: The list of allocated GlobalIPs.
                  items:
                    type: string
                  type: array
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: globalingressips.submariner.io
spec:
  group: submariner.io
  names:
    kind: GlobalIngressIP
    listKind: GlobalIngressIPList
    plural: globalingressips
    shortNames:
      - giip
    singular: globalingressip
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Global IP Allocated
          jsonPath: .status.allocatedIP
          name: IP
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the specification of desired behavior of GlobalIngressIP object.
              properties:
                podRef:
                  description: The reference to a targeted Pod, if applicable.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                serviceRef:
                  description: The reference to a targeted Service, if applicable.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                target:
                  description: Specifies the type of the entity targeted by this object.
                  type: string
              required:
                - target
              type: object
            status:
              description: Observed status of GlobalIngressIP. Its a read-only field.
              properties:
                allocatedIP:
                  description: The GlobalIP allocated to this object.
                  type: string
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: kubefedclusters.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: KubeFedCluster
    listKind: KubeFedClusterList
    plural: kubefedclusters
    shortNames:
      - kfc
    singular: kubefedcluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: age
          type: date
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: ready
          type: string
        - jsonPath: .status.kubernetesVersion
          name: kubernetes-version
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: KubeFedCluster configures KubeFed to be aware of a Kubernetes cluster and encapsulates the details necessary to communicate with the cluster.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeFedClusterSpec defines the desired state of KubeFedCluster
              properties:
                apiEndpoint:
                  description: The API endpoint of the member cluster. This can be a hostname, hostname:port, IP or IP:port.
                  type: string
                caBundle:
                  description: CABundle contains the certificate authority information.
                  format: byte
                  type: string
                disabledTLSValidations:
                  description: DisabledTLSValidations defines a list of checks to ignore when validating the TLS connection to the member cluster.  This can be any of *, SubjectName, or ValidityPeriod. If * is specified, it is expected to be the only option in list.
                  items:
                    type: string
                  type: array
                proxyURL:
                  description: ProxyURL allows to set proxy URL for the cluster.
                  type: string
                secretRef:
                  description: Name of the secret containing the token required to access the member cluster. The secret needs to exist in the same namespace as the control plane and should have a "token" key.
                  properties:
                    name:
                      description: Name of a secret within the enclosing namespace
                      type: string
                  required:
                    - name
                  type: object
              required:
                - apiEndpoint
                - secretRef
              type: object
            status:
              description: KubeFedClusterStatus contains information about the current status of a cluster updated periodically by cluster controller.
              properties:
                conditions:
                  description: Conditions is an array of current cluster conditions.
                  items:
                    description: ClusterCondition describes current state of a cluster.
                    properties:
                      lastProbeTime:
                        description: Last time the condition was checked.
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: Last time the condition transit from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Human readable message indicating details about last transition.
                        type: string
                      reason:
                        description: (brief) reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of cluster condition, Ready or Offline.
                        type: string
                    required:
                      - lastProbeTime
                      - status
                      - type
                    type: object
                  type: array
                kubernetesVersion:
                  description: KubernetesVersion is the Kubernetes git version of the cluster.
                  type: string
                region:
                  description: Region is the name of the region in which all of the nodes in the cluster exist.  e.g. 'us-east1'.
                  type: string
                zones:
                  description: Zones are the names of availability zones in which the nodes of the cluster exist, e.g. 'us-east1-a'.
                  items:
                    type: string
                  type: array
              required:
                - conditions
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: kubefedconfigs.core.kubefed.io
spec:
  group: core.kubefed.io
  names:
    kind: KubeFedConfig
    listKind: KubeFedConfigList
    plural: kubefedconfigs
    singular: kubefedconfig
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeFedConfigSpec defines the desired state of KubeFedConfig
              properties:
                clusterHealthCheck:
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the cluster health to be considered failed after having succeeded.
                      format: int64
                      type: integer
                    period:
                      description: How often to monitor the cluster health.
                      type: string
                    successThreshold:
                      description: Minimum consecutive successes for the cluster health to be considered successful after having failed.
                      format: int64
                      type: integer
                    timeout:
                      description: Duration after which the cluster health check times out.
                      type: string
                  type: object
                controllerDuration:
                  properties:
                    availableDelay:
                      description: Time to wait before reconciling on a healthy cluster.
                      type: string
                    cacheSyncTimeout:
                      description: Time to wait for all caches to sync before exit.
                      type: string
                    unavailableDelay:
                      description: Time to wait before giving up on an unhealthy cluster.
                      type: string
                  type: object
                featureGates:
                  items:
                    properties:
                      configuration:
                        type: string
                      name:
                        type: string
                    required:
                      - configuration
                      - name
                    type: object
                  type: array
                leaderElect:
                  properties:
                    leaseDuration:
                      description: The duration that non-leader candidates will wait after observing a leadership renewal until attempting to acquire leadership of a led but unrenewed leader slot. This is effectively the maximum duration that a leader can be stopped before it is replaced by another candidate. This is only applicable if leader election is enabled.
                      type: string
                    renewDeadline:
                      description: The interval between attempts by the acting master to renew a leadership slot before it stops leading. This must be less than or equal to the lease duration. This is only applicable if leader election is enabled.
                      type: string
                    resourceLock:
                      description: The type of resource object that is used for locking during leader election. Supported options are `configmaps` (default) and `endpoints`.
                      type: string
                    retryPeriod:
                      description: The duration the clients should wait between attempting acquisition and renewal of a leadership. This is only applicable if leader election is enabled.
                      type: string
                  type: object
                scope:
                  description: The scope of the KubeFed control plane should be either `Namespaced` or `Cluster`. `Namespaced` indicates that the KubeFed namespace will be the only target of the control plane.
                  type: string
                statusController:
                  properties:
                    maxConcurrentReconciles:
                      description: The maximum number of concurrent Reconciles of status controller which can be run. Defaults to 1.
                      format: int64
                      type: integer
                  type: object
                syncController:
                  properties:
                    adoptResources:
                      description: Whether to adopt pre-existing resources in member clusters. Defaults to "Enabled".
                      type: string
                    maxConcurrentReconciles:
                      description: The maximum number of concurrent Reconciles of sync controller which can be run. Defaults to 1.
                      format: int64
                      type: integer
                  type: object
              required:
                - scope
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: physicalinstances.connection-hub.roboscale.io
spec:
  group: connection-hub.roboscale.io
  names:
    kind: PhysicalInstance
    listKind: PhysicalInstanceList
    plural: physicalinstances
    singular: physicalinstance
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.submariner.gatewayConnection.gatewayResource
          name: Gateway
          type: string
        - jsonPath: .status.submariner.gatewayConnection.hostname
          name: Hostname
          type: string
        - jsonPath: .status.submariner.gatewayConnection.clusterID
          name: Cluster ID
          type: string
        - jsonPath: .status.subnets.list
          name: Subnets
          type: string
        - jsonPath: .status.multicastPhase
          name: Multicast
          type: string
        - jsonPath: .status.federationPhase
          name: Federation
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PhysicalInstance is the Schema for the physicalinstances API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PhysicalInstanceSpec defines the desired state of PhysicalInstance
              properties:
                credentials:
                  properties:
                    certificateAuthority:
                      type: string
                    clientCertificate:
                      type: string
                    clientKey:
                      type: string
                  required:
                    - certificateAuthority
                    - clientCertificate
                    - clientKey
                  type: object
                server:
                  type: string
              required:
                - credentials
                - server
              type: object
            status:
              description: PhysicalInstanceStatus defines the observed state of PhysicalInstance
              properties:
                federation:
                  properties:
                    created:
                      type: boolean
                    status:
                      description: FederationMemberStatus defines the observed state of FederationMember
                      properties:
                        host:
                          properties:
                            exists:
                              type: boolean
                            name:
                              type: string
                          type: object
                        joinAttempted:
                          type: boolean
                        kubefedClusterStatus:
                          properties:
                            conditionType:
                              type: string
                            created:
                              type: boolean
                            reason:
                              type: string
                          type: object
                        phase:
                          type: string
                      type: object
                  type: object
                federationPhase:
                  type: string
                multicastPhase:
                  type: string
                phase:
                  type: string
                submariner:
                  properties:
                    connectionResources:
                      properties:
                        clusterStatus:
                          properties:
                            exists:
                              type: boolean
                            name:
                              type: string
                          type: object
                        endpointStatus:
                          properties:
                            exists:
                              type: boolean
                            name:
                              type: string
                          type: object
                      type: object
                    deployerStatus:
                      properties:
                        exists:
                          type: boolean
                        name:
                          type: string
                        phase:
                          type: string
                      type: object
                    gatewayConnection:
                      properties:
                        clusterID:
                          type: string
                        connectionStatus:
                          type: string
                        gatewayResource:
                          type: string
                        hostname:
                          type: string
                      type: object
                  type: object
                subnets:
                  properties:
                    list:
                      items:
                        type: string
                      type: array
                    listInStr:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: servicediscoveries.submariner.io
spec:
  group: submariner.io
  names:
    kind: ServiceDiscovery
    listKind: ServiceDiscoveryList
    plural: servicediscoveries
    singular: servicediscovery
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceDiscovery is the Schema for the servicediscoveries API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceDiscoverySpec defines the desired state of ServiceDiscovery
              properties:
                brokerK8sApiServer:
                  type: string
                brokerK8sApiServerToken:
                  type: string
                brokerK8sCA:
                  type: string
                brokerK8sInsecure:
                  type: boolean
                brokerK8sRemoteNamespace:
                  type: string
                brokerK8sSecret:
                  type: string
                clusterID:
                  type: string
                coreDNSCustomConfig:
                  properties:
                    configMapName:
                      type: string
                    namespace:
                      type: string
                  type: object
                customDomains:
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                debug:
                  type: boolean
                globalnetEnabled:
                  type: boolean
                imageOverrides:
                  additionalProperties:
                    type: string
                  type: object
                namespace:
                  type: string
                repository:
                  type: string
                version:
                  type: string
              required:
                - brokerK8sApiServer
                - brokerK8sRemoteNamespace
                - clusterID
                - debug
                - namespace
              type: object
            status:
              description: ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
              properties:
                deploymentInfo:
                  properties:
                    cloudProvider:
                      type: string
                    kubernetesType:
                      type: string
                    kubernetesTypeVersion:
                      type: string
                    kubernetesVersion:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: submarinerbrokers.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: SubmarinerBroker
    listKind: SubmarinerBrokerList
    plural: submarinerbrokers
    singular: submarinerbroker
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SubmarinerBroker is the Schema for the submarinerbrokers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerBrokerSpec defines the desired state of SubmarinerBroker
              properties:
                apiServerURL:
                  type: string
                helmChart:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - version
                  type: object
                helmRepository:
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                  required:
                    - name
                    - url
                  type: object
              required:
                - apiServerURL
                - helmChart
                - helmRepository
              type: object
            status:
              description: SubmarinerBrokerStatus defines the observed state of SubmarinerBroker
              properties:
                brokerCredentials:
                  properties:
                    ca:
                      type: string
                    token:
                      type: string
                  type: object
                chartResourceStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                chartStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                namespaceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                nodeInfo:
                  properties:
                    name:
                      type: string
                    selectors:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: submarineroperators.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: SubmarinerOperator
    listKind: SubmarinerOperatorList
    plural: submarineroperators
    singular: submarineroperator
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SubmarinerOperator is the Schema for the submarineroperators API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerOperatorSpec defines the desired state of SubmarinerOperator
              properties:
                apiServerURL:
                  type: string
                broker:
                  properties:
                    ca:
                      type: string
                    token:
                      type: string
                  type: object
                clusterCIDR:
                  type: string
                clusterID:
                  type: string
                gatewayImage:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
                helmChart:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - version
                  type: object
                helmRepository:
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                  required:
                    - name
                    - url
                  type: object
                operatorImage:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
                presharedKey:
                  type: string
                serviceCIDR:
                  type: string
                submarinerImages:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
              required:
                - apiServerURL
                - broker
                - clusterCIDR
                - clusterID
                - gatewayImage
                - helmChart
                - helmRepository
                - operatorImage
                - presharedKey
                - serviceCIDR
                - submarinerImages
              type: object
            status:
              description: SubmarinerOperatorStatus defines the observed state of SubmarinerOperator
              properties:
                chartResourceStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                chartStatus:
                  properties:
                    deployed:
                      type: boolean
                  type: object
                namespaceStatus:
                  properties:
                    created:
                      type: boolean
                  type: object
                nodeInfo:
                  properties:
                    name:
                      type: string
                    selectors:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: submariners.connection-hub.roboscale.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: connection-hub-operator-webhook-service
          namespace: connection-hub-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: connection-hub.roboscale.io
  names:
    kind: Submariner
    listKind: SubmarinerList
    plural: submariners
    singular: submariner
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.phase
          name: Phase
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Submariner is the Schema for the submariners API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerSpec defines the desired state of Submariner
              properties:
                apiServerURL:
                  type: string
                broker:
                  properties:
                    ca:
                      type: string
                    token:
                      type: string
                  type: object
                brokerHelmChart:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - version
                  type: object
                clusterCIDR:
                  type: string
                gatewayImage:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
                helmRepository:
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                  required:
                    - name
                    - url
                  type: object
                instanceType:
                  enum:
                    - CloudInstance
                    - PhysicalInstance
                  type: string
                operatorHelmChart:
                  properties:
                    chartName:
                      type: string
                    releaseName:
                      type: string
                    version:
                      type: string
                  required:
                    - chartName
                    - releaseName
                    - version
                  type: object
                operatorImage:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
                presharedKey:
                  type: string
                serviceCIDR:
                  default: 10.32.0.0/16
                  type: string
                submarinerImages:
                  properties:
                    image:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  required:
                    - image
                    - repository
                    - tag
                  type: object
              required:
                - apiServerURL
                - brokerHelmChart
                - clusterCIDR
                - gatewayImage
                - helmRepository
                - operatorHelmChart
                - operatorImage
                - submarinerImages
              type: object
            status:
              description: SubmarinerStatus defines the observed state of Submariner
              properties:
                brokerStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                    status:
                      description: SubmarinerBrokerStatus defines the observed state of SubmarinerBroker
                      properties:
                        brokerCredentials:
                          properties:
                            ca:
                              type: string
                            token:
                              type: string
                          type: object
                        chartResourceStatus:
                          properties:
                            deployed:
                              type: boolean
                          type: object
                        chartStatus:
                          properties:
                            deployed:
                              type: boolean
                          type: object
                        namespaceStatus:
                          properties:
                            created:
                              type: boolean
                          type: object
                        nodeInfo:
                          properties:
                            name:
                              type: string
                            selectors:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        phase:
                          type: string
                      type: object
                  type: object
                customResourceStatus:
                  properties:
                    created:
                      type: boolean
                    ownedResourceStatus:
                      properties:
                        deployed:
                          type: boolean
                      type: object
                  type: object
                nodeInfo:
                  properties:
                    name:
                      type: string
                    selectors:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                operatorStatus:
                  properties:
                    created:
                      type: boolean
                    phase:
                      type: string
                  type: object
                phase:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: submariners.submariner.io
spec:
  group: submariner.io
  names:
    kind: Submariner
    listKind: SubmarinerList
    plural: submariners
    singular: submariner
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Submariner is the Schema for the submariners API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubmarinerSpec defines the desired state of Submariner
              properties:
                broker:
                  type: string
                brokerK8sApiServer:
                  type: string
                brokerK8sApiServerToken:
                  type: string
                brokerK8sCA:
                  type: string
                brokerK8sInsecure:
                  type: boolean
                brokerK8sRemoteNamespace:
                  type: string
                brokerK8sSecret:
                  type: string
                cableDriver:
                  type: string
                ceIPSecDebug:
                  type: boolean
                ceIPSecForceUDPEncaps:
                  type: boolean
                ceIPSecIKEPort:
                  type: integer
                ceIPSecNATTPort:
                  type: integer
                ceIPSecPSK:
                  type: string
                ceIPSecPSKSecret:
                  type: string
                ceIPSecPreferredServer:
                  type: boolean
                ceNatDiscovery:
                  type: integer
                clusterCIDR:
                  type: string
                clusterID:
                  type: string
                colorCodes:
                  type: string
                connectionHealthCheck:
                  properties:
                    enabled:
                      type: boolean
                    intervalSeconds:
                      description: The interval at which health check pings are sent.
                      format: int64
                      type: integer
                    maxPacketLossCount:
                      description: The maximum number of packets lost at which the health checker will mark the connection as down.
                      format: int64
                      type: integer
                  type: object
                coreDNSCustomConfig:
                  properties:
                    configMapName:
                      type: string
                    namespace:
                      type: string
                  type: object
                customDomains:
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                debug:
                  type: boolean
                globalCIDR:
                  type: string
                imageOverrides:
                  additionalProperties:
                    type: string
                  type: object
                loadBalancerEnabled:
                  type: boolean
                namespace:
                  type: string
                natEnabled:
                  type: boolean
                repository:
                  type: string
                serviceCIDR:
                  type: string
                serviceDiscoveryEnabled:
                  type: boolean
                version:
                  type: string
              required:
                - broker
                - brokerK8sApiServer
                - brokerK8sRemoteNamespace
                - ceIPSecDebug
                - clusterCIDR
                - clusterID
                - debug
                - namespace
                - natEnabled
                - serviceCIDR
              type: object
            status:
              description: SubmarinerStatus defines the observed state of Submariner
              properties:
                clusterCIDR:
                  type: string
                clusterID:
                  type: string
                colorCodes:
                  type: string
                deploymentInfo:
                  properties:
                    cloudProvider:
                      type: string
                    kubernetesType:
                      type: string
                    kubernetesTypeVersion:
                      type: string
                    kubernetesVersion:
                      type: string
                  type: object
                gatewayDaemonSetStatus:
                  properties:
                    lastResourceVersion:
                      type: string
                    mismatchedContainerImages:
                      type: boolean
                    nonReadyContainerStates:
                      items:
                        description: ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
                        properties:
                          running:
                            description: Details about a running container
                            properties:
                              startedAt:
                                description: Time at which the container was last (re-)started
                                format: date-time
                                type: string
                            type: object
                          terminated:
                            description: Details about a terminated container
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'
                                type: string
                              exitCode:
                                description: Exit status from the last termination of the container
                                format: int32
                                type: integer
                              finishedAt:
                                description: Time at which the container last terminated
                                format: date-time
                                type: string
                              message:
                                description: Message regarding the last termination of the container
                                type: string
                              reason:
                                description: (brief) reason from the last termination of the container
                                type: string
                              signal:
                                description: Signal from the last termination of the container
                                format: int32
                                type: integer
                              startedAt:
                                description: Time at which previous execution of the container started
                                format: date-time
                                type: string
                            required:
                              - exitCode
                            type: object
                          waiting:
                            description: Details about a waiting container
                            properties:
                              message:
                                description: Message regarding why the container is not yet running.
                                type: string
                              reason:
                                description: (brief) reason the container is not yet running.
                                type: string
                            type: object
                        type: object
                      type: array
                    status:
                      description: DaemonSetStatus represents the current status of a daemon set.
                      properties:
                        collisionCount:
                          description: Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
                          format: int32
                          type: integer
                        conditions:
                          description: Represents the latest available observations of a DaemonSet's current state.
                          items:
                            description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type of DaemonSet condition.
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        currentNumberScheduled:
                          description: 'The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        desiredNumberScheduled:
                          description: 'The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberAvailable:
                          description: The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        numberMisscheduled:
                          description: 'The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberReady:
                          description: numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.
                          format: int32
                          type: integer
                        numberUnavailable:
                          description: The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        observedGeneration:
                          description: The most recent generation observed by the daemon set controller.
                          format: int64
                          type: integer
                        updatedNumberScheduled:
                          description: The total number of nodes that are running updated daemon pod
                          format: int32
                          type: integer
                      required:
                        - currentNumberScheduled
                        - desiredNumberScheduled
                        - numberMisscheduled
                        - numberReady
                      type: object
                  required:
                    - mismatchedContainerImages
                  type: object
                gateways:
                  items:
                    properties:
                      connections:
                        items:
                          properties:
                            endpoint:
                              properties:
                                backend:
                                  type: string
                                backend_config:
                                  additionalProperties:
                                    type: string
                                  type: object
                                cable_name:
                                  type: string
                                cluster_id:
                                  maxLength: 63
                                  minLength: 1
                                  type: string
                                healthCheckIP:
                                  type: string
                                hostname:
                                  type: string
                                nat_enabled:
                                  type: boolean
                                private_ip:
                                  type: string
                                public_ip:
                                  type: string
                                subnets:
                                  items:
                                    type: string
                                  type: array
                              required:
                                - backend
                                - cable_name
                                - cluster_id
                                - hostname
                                - nat_enabled
                                - private_ip
                                - public_ip
                                - subnets
                              type: object
                            latencyRTT:
                              description: LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
                              properties:
                                average:
                                  type: string
                                last:
                                  type: string
                                max:
                                  type: string
                                min:
                                  type: string
                                stdDev:
                                  type: string
                              type: object
                            status:
                              type: string
                            statusMessage:
                              type: string
                            usingIP:
                              type: string
                            usingNAT:
                              type: boolean
                          required:
                            - endpoint
                            - status
                            - statusMessage
                          type: object
                        type: array
                      haStatus:
                        type: string
                      localEndpoint:
                        properties:
                          backend:
                            type: string
                          backend_config:
                            additionalProperties:
                              type: string
                            type: object
                          cable_name:
                            type: string
                          cluster_id:
                            maxLength: 63
                            minLength: 1
                            type: string
                          healthCheckIP:
                            type: string
                          hostname:
                            type: string
                          nat_enabled:
                            type: boolean
                          private_ip:
                            type: string
                          public_ip:
                            type: string
                          subnets:
                            items:
                              type: string
                            type: array
                        required:
                          - backend
                          - cable_name
                          - cluster_id
                          - hostname
                          - nat_enabled
                          - private_ip
                          - public_ip
                          - subnets
                        type: object
                      statusFailure:
                        type: string
                      version:
                        type: string
                    required:
                      - connections
                      - haStatus
                      - localEndpoint
                      - statusFailure
                      - version
                    type: object
                  type: array
                globalCIDR:
                  type: string
                globalnetDaemonSetStatus:
                  properties:
                    lastResourceVersion:
                      type: string
                    mismatchedContainerImages:
                      type: boolean
                    nonReadyContainerStates:
                      items:
                        description: ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
                        properties:
                          running:
                            description: Details about a running container
                            properties:
                              startedAt:
                                description: Time at which the container was last (re-)started
                                format: date-time
                                type: string
                            type: object
                          terminated:
                            description: Details about a terminated container
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'
                                type: string
                              exitCode:
                                description: Exit status from the last termination of the container
                                format: int32
                                type: integer
                              finishedAt:
                                description: Time at which the container last terminated
                                format: date-time
                                type: string
                              message:
                                description: Message regarding the last termination of the container
                                type: string
                              reason:
                                description: (brief) reason from the last termination of the container
                                type: string
                              signal:
                                description: Signal from the last termination of the container
                                format: int32
                                type: integer
                              startedAt:
                                description: Time at which previous execution of the container started
                                format: date-time
                                type: string
                            required:
                              - exitCode
                            type: object
                          waiting:
                            description: Details about a waiting container
                            properties:
                              message:
                                description: Message regarding why the container is not yet running.
                                type: string
                              reason:
                                description: (brief) reason the container is not yet running.
                                type: string
                            type: object
                        type: object
                      type: array
                    status:
                      description: DaemonSetStatus represents the current status of a daemon set.
                      properties:
                        collisionCount:
                          description: Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
                          format: int32
                          type: integer
                        conditions:
                          description: Represents the latest available observations of a DaemonSet's current state.
                          items:
                            description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type of DaemonSet condition.
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        currentNumberScheduled:
                          description: 'The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        desiredNumberScheduled:
                          description: 'The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberAvailable:
                          description: The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        numberMisscheduled:
                          description: 'The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberReady:
                          description: numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.
                          format: int32
                          type: integer
                        numberUnavailable:
                          description: The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        observedGeneration:
                          description: The most recent generation observed by the daemon set controller.
                          format: int64
                          type: integer
                        updatedNumberScheduled:
                          description: The total number of nodes that are running updated daemon pod
                          format: int32
                          type: integer
                      required:
                        - currentNumberScheduled
                        - desiredNumberScheduled
                        - numberMisscheduled
                        - numberReady
                      type: object
                  required:
                    - mismatchedContainerImages
                  type: object
                loadBalancerStatus:
                  properties:
                    status:
                      description: LoadBalancerStatus represents the status of a load-balancer.
                      properties:
                        ingress:
                          description: Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
                          items:
                            description: 'LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service ports If used, every port defined in the service should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use CamelCase names - cloud provider specific error values must have names that comply with the format foo.example.com/CamelCase. --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                    - port
                                    - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                      type: object
                  type: object
                natEnabled:
                  type: boolean
                networkPlugin:
                  type: string
                routeAgentDaemonSetStatus:
                  properties:
                    lastResourceVersion:
                      type: string
                    mismatchedContainerImages:
                      type: boolean
                    nonReadyContainerStates:
                      items:
                        description: ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
                        properties:
                          running:
                            description: Details about a running container
                            properties:
                              startedAt:
                                description: Time at which the container was last (re-)started
                                format: date-time
                                type: string
                            type: object
                          terminated:
                            description: Details about a terminated container
                            properties:
                              containerID:
                                description: Container's ID in the format '<type>://<container_id>'
                                type: string
                              exitCode:
                                description: Exit status from the last termination of the container
                                format: int32
                                type: integer
                              finishedAt:
                                description: Time at which the container last terminated
                                format: date-time
                                type: string
                              message:
                                description: Message regarding the last termination of the container
                                type: string
                              reason:
                                description: (brief) reason from the last termination of the container
                                type: string
                              signal:
                                description: Signal from the last termination of the container
                                format: int32
                                type: integer
                              startedAt:
                                description: Time at which previous execution of the container started
                                format: date-time
                                type: string
                            required:
                              - exitCode
                            type: object
                          waiting:
                            description: Details about a waiting container
                            properties:
                              message:
                                description: Message regarding why the container is not yet running.
                                type: string
                              reason:
                                description: (brief) reason the container is not yet running.
                                type: string
                            type: object
                        type: object
                      type: array
                    status:
                      description: DaemonSetStatus represents the current status of a daemon set.
                      properties:
                        collisionCount:
                          description: Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
                          format: int32
                          type: integer
                        conditions:
                          description: Represents the latest available observations of a DaemonSet's current state.
                          items:
                            description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type of DaemonSet condition.
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        currentNumberScheduled:
                          description: 'The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        desiredNumberScheduled:
                          description: 'The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberAvailable:
                          description: The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        numberMisscheduled:
                          description: 'The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                          format: int32
                          type: integer
                        numberReady:
                          description: numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.
                          format: int32
                          type: integer
                        numberUnavailable:
                          description: The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
                          format: int32
                          type: integer
                        observedGeneration:
                          description: The most recent generation observed by the daemon set controller.
                          format: int64
                          type: integer
                        updatedNumberScheduled:
                          description: The total number of nodes that are running updated daemon pod
                          format: int32
                          type: integer
                      required:
                        - currentNumberScheduled
                        - desiredNumberScheduled
                        - numberMisscheduled
                        - numberReady
                      type: object
                  required:
                    - mismatchedContainerImages
                  type: object
                serviceCIDR:
                  type: string
              required:
                - clusterID
                - natEnabled
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-controller-manager
  namespace: connection-hub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-leader-election-role
  namespace: connection-hub-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: connection-hub-operator-manager-role
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments/finalizers
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - batch
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - config.openshift.io
    resources:
      - networks
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - cloudinstances
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - cloudinstances/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - cloudinstances/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - connectionhubs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - connectionhubs/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - connectionhubs/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationhosts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationhosts/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationhosts/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationmembers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationmembers/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationmembers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationoperators
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationoperators/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - federationoperators/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - physicalinstances
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - physicalinstances/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - physicalinstances/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarinerbrokers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarinerbrokers/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarinerbrokers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarineroperators
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarineroperators/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submarineroperators/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submariners
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submariners/finalizers
    verbs:
      - update
  - apiGroups:
      - connection-hub.roboscale.io
    resources:
      - submariners/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - '*'
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - services/finalizers
    verbs:
      - '*'
  - apiGroups:
      - core.kubefed.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices/restricted
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - '*'
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - serviceexports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - '*'
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - multiclusterdns.kubefed.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - mutation.core.kubefed.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - network.openshift.io
    resources:
      - service/externalips
    verbs:
      - '*'
  - apiGroups:
      - operator.openshift.io
    resources:
      - dnses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - scheduling.kubefed.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - submariner.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - submariner.io
    resources:
      - clusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - gateways
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - globalingressips
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - servicediscoveries
    verbs:
      - '*'
  - apiGroups:
      - submariner.io
    resources:
      - submariners
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - types.kubefed.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - validation.core.kubefed.io
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-leader-election-rolebinding
  namespace: connection-hub-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: connection-hub-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: connection-hub-operator-controller-manager
    namespace: connection-hub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: connection-hub-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: connection-hub-operator-controller-manager
    namespace: connection-hub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: connection-hub-operator-proxy-role
subjects:
  - kind: ServiceAccount
    name: connection-hub-operator-controller-manager
    namespace: connection-hub-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: connection-hub-operator
    control-plane: controller-manager
  name: connection-hub-operator-controller-manager-metrics-service
  namespace: connection-hub-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-webhook-service
  namespace: connection-hub-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: connection-hub-operator
    control-plane: controller-manager
  name: connection-hub-operator-controller-manager
  namespace: connection-hub-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: robolaunchio/connection-hub-controller-manager:v0.1.7-alpha.3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: connection-hub-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
      nodeSelector:
        robolaunch.io/organization: robolaunch
        robolaunch.io/team: robotics
        robolaunch.io/region: europe-east
        robolaunch.io/cloud-instance: cluster
        robolaunch.io/cloud-instance-alias: cluster-alias
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-serving-cert
  namespace: connection-hub-system
spec:
  dnsNames:
    - connection-hub-operator-webhook-service.connection-hub-system.svc
    - connection-hub-operator-webhook-service.connection-hub-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: connection-hub-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kuberentes.io/name: issuer
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-selfsigned-issuer
  namespace: connection-hub-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-cloudinstance
    failurePolicy: Fail
    name: mcloudinstance.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - cloudinstances
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-connectionhub
    failurePolicy: Fail
    name: mconnectionhub.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - connectionhubs
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-federationoperator
    failurePolicy: Fail
    name: mfederationoperator.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - federationoperators
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-submariner
    failurePolicy: Fail
    name: msubmariner.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submariners
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-submarinerbroker
    failurePolicy: Fail
    name: msubmarinerbroker.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarinerbrokers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /mutate-connection-hub-roboscale-io-v1alpha1-submarineroperator
    failurePolicy: Fail
    name: msubmarineroperator.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarineroperators
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: connection-hub-system/connection-hub-operator-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: connection-hub-operator
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: connection-hub-operator
  name: connection-hub-operator-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-cloudinstance
    failurePolicy: Fail
    name: vcloudinstance.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - cloudinstances
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-connectionhub
    failurePolicy: Fail
    name: vconnectionhub.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - connectionhubs
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-federationoperator
    failurePolicy: Fail
    name: vfederationoperator.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - federationoperators
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-submariner
    failurePolicy: Fail
    name: vsubmariner.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submariners
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-submarinerbroker
    failurePolicy: Fail
    name: vsubmarinerbroker.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarinerbrokers
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: connection-hub-operator-webhook-service
        namespace: connection-hub-system
        path: /validate-connection-hub-roboscale-io-v1alpha1-submarineroperator
    failurePolicy: Fail
    name: vsubmarineroperator.kb.io
    rules:
      - apiGroups:
          - connection-hub.roboscale.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - submarineroperators
    sideEffects: None
